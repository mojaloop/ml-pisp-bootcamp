swagger: '2.0'
info:
  title: Google Standard Payments Payment Integrator Hosted Banking FOP API
  description: This includes services hosted by Payment Integrators for Banking FOPs.
  version: v3 draft
host: www.integratorhost.example.com
schemes:
  - http
  - https
paths:
  /v2/associateAccount:
    post:
      tags:
        - payment_integrator_banking_fop_api
      operationId: AssociateAccount
      description: 'Associates the customer''s account with the payment processor to the Google instrument being added. Account association happens after the integrator has authenticated the user. Association occurs via a server-to-server call that contains the `requestId` for the associated authentication flow (`authenticationRequestId`), an `associationId` and a `googlePaymentToken` (GPT). The payment processor should associate the `associationId` and the `googlePaymentToken` to the customer''s account for authentication. The GPT is used to initiate payments. The `associationId` is used during re-authentication calls to identify the account for authentication. If Google sends an `associationId` or a `googlePaymentToken` that the integrator has already seen during a different association, then it throws an error. An example request looks like: { "requestHeader": { "protocolVersion": { "major": 2 }, "requestId": "bWVyY2hhbnQgdHJhbnNhY3Rpb24gaWQ", "requestTimestamp": { "epochMillis": "1502220196077" }, "paymentIntegratorAccountId": "InvisiCashUSD" }, "authenticationRequestId": "bnAxdWTydDX==", "googlePaymentToken": { "issuerId": { "value": "InvisiCashUSA" }, "token": "ZXhhbXBsZSB1bmlxdWUgcGF5bWVudCB0b2tlbiB2YWx1ZQ" }, "associationId": "LmddbXBsZSByZWZlcmVuY2UgdG9rZW4gdmFsdWU", "provideUserInformation": true } An example response looks like: { "responseHeader": { "responseTimestamp": { "epochMillis": "1481900013178" } }, "result": { "success": { "bankAccountIdentifier": { "singaporeBankAccount": { "sgFastBankAccount": { "localAccountNumber": "113A", "swiftBic": { "value": "COBADEFF478" } }, "localBankIdentifier":{ "localBankCode": "7171", "localBranchCode": "060" } } }, "bankAccountDetails" : { "accountNumberSuffix": "1234", "bankAccountType": { "type": "SAVINGS" }, "bankAccountMetadata": { } }, "transactionLimits": { "transactionMaxLimit": { "noLimit": {} } }, "userInformation": { "name": "Example Customer", "addressLine": ["70 Pasir Panjang Rd"], "localityName": "#03-71", "postalCodeNumber": "117371", "countryCode": "SG" } } } } '
      parameters:
        - name: body
          description: The request body.
          in: body
          schema:
            $ref: '#/definitions/AssociateAccountRequest'
      responses:
        default:
          description: Successful operation
          schema:
            $ref: '#/definitions/AssociateAccountResponse'
  /v2/associateAccountWithVendorGeneratedToken:
    post:
      tags:
        - payment_integrator_banking_fop_api
      operationId: AssociateAccountWithVendorGeneratedToken
      description: 'Associates the customer''s account with the payment processor to the Google instrument being added. Account association happens after the integrator has authenticated the user. Association occurs via a server-to-server call that contains the `requestId` for the associated authentication flow (`authenticationRequestId`) and an `associationId`.The payment processor should associate the `associationId` to the customer''s account. The `associationId` is used during re-authentication calls to identify the account for authentication. If Google sends an `associationId` that the integrator has already seen during a different association, then it throws an error. In the response, the payment processor generates a ''vendorPaymentToken'' which is bound to the customer''s account and is used for authorizing subsequent payments. An example request looks like: { "requestHeader": { "protocolVersion": { "major": 2 }, "requestId": "bWVyY2hhbnQgdHJhbnNhY3Rpb24gaWQ", "requestTimestamp": { "epochMillis": "1502220196077" }, "paymentIntegratorAccountId": "InvisiCashUSD" }, "authenticationRequestId": "bnAxdWTydDX==", "associationId": "LmddbXBsZSByZWZlcmVuY2UgdG9rZW4gdmFsdWU_", "provideUserInformation": true } An example response looks like: { "responseHeader": { "responseTimestamp": { "epochMillis": "1481900013178" } }, "result": { "success": { "vendorPaymentToken": "ZXhhbXBsZSB1bmlxdWUgcGF5bWVudCB0b2tlbiB2YWx1ZQ", "tokenExpirationTime": { "epochMillis": "1481919332394" }, "bankAccountIdentifier": { "singaporeBankAccount": { "sgFastBankAccount": { "localAccountNumber": "113A", "swiftBic": { "value": "COBADEFF478" } }, "localBankIdentifier":{ "localBankCode": "7171", "localBranchCode": "060" } } }, "bankAccountDetails" : { "accountNumberSuffix": "1234", "bankAccountType": { "type": "SAVINGS" }, "bankAccountMetadata": { } }, "transactionLimits": { "transactionMaxLimit": { "noLimit": {} } }, "userInformation": { "name": "Example Customer", "addressLine": ["70 Pasir Panjang Rd"], "localityName": "#03-71", "postalCodeNumber": "117371", "countryCode": "SG" } } } } '
      parameters:
        - name: body
          description: The request body.
          in: body
          schema:
            $ref: '#/definitions/AssociateAccountWithVendorGeneratedTokenRequest'
      responses:
        default:
          description: Successful operation
          schema:
            $ref: '#/definitions/AssociateAccountWithVendorGeneratedTokenResponse'
  /v2/disassociateAccount:
    post:
      tags:
        - payment_integrator_banking_fop_api
      operationId: DisassociateAccount
      description: 'Deletes the association between the customer''s account with the payment processor and the Google instrument. This disassociation should be processed idempotently, so if the same requestId is used as a previously processed request, the previous result should be idempotently returned. Otherwise if Google sends a `googlePaymentToken` that has already been disassociated, an error should be returned. An example request looks like: { "requestHeader": { "protocolVersion": { "major": 2 }, "requestId": "bWVyY2hhbnQgdHJhbnNhY3Rpb24gaWQ", "requestTimestamp": { "epochMillis": "0" }, "paymentIntegratorAccountId": "InvisiCashUSD" }, "googlePaymentToken": { "issuerId": { "value": "InvisiCashUSA" }, "token": "ZXhhbXBsZSB1bmlxdWUgcGF5bWVudCB0b2tlbiB2YWx1ZQ" } } An example response looks like: { "responseHeader": { "responseTimestamp": { "epochMillis": "1481900013178" } }, "result": {"success": {}} } '
      parameters:
        - name: body
          description: The request body.
          in: body
          schema:
            $ref: '#/definitions/DisassociateAccountRequest'
      responses:
        default:
          description: Successful operation
          schema:
            $ref: '#/definitions/DisassociateAccountResponse'
  /v3/transferFunds:
    post:
      tags:
        - payment_integrator_banking_fop_api
      operationId: TransferFunds
      description: 'Initiates money movement between a customer''s account held with Google and the payment processor. The combination of `requestId` within the header and `paymentIntegratorAccountId` is the idempotency key and uniquely identifies this transaction. All mutations on this transaction (refunds) populate the `requestId` value in the `capture_request_id` field. An example request looks like: { "requestHeader": { "protocolVersion": { "major": 2 }, "requestId": "bWVyY2hhbnQgdHJhbnNhY3Rpb24gaWQ", "requestTimestamp": { "epochMillis": "1502220196077" }, "paymentIntegratorAccountId": "InvisiCashUSA_USD" }, "googlePaymentToken": { "issuerId": { "value": "InvisiCash" }, "token": "ZXhhbXBsZSB1bmlxdWUgcGF5bWVudCB0b2tlbiB2YWx1ZQ" }, "transactionDescription": "Google - Music", "amount": { "amountMicros": "728000000", "currencyCode": "INR" }, "destinationBankAccount": { "bankAccountId": { "accountNumber": { "localAccountNumber": "1234-5678-91" }, "swiftBic": "XXXXSGS0XXX" }, "bankAccountOwner": { "name": "Sam User" } }, "transferFundsContext": {} } An example response looks like: { "responseHeader": { "responseTimestamp": { "epochMillis": "1481900013178" } }, "result": {"success": {}}, "paymentIntegratorTransactionId": "aW50ZWdyYXRvciB0cmFuc2FjdGlvbiBpZA" } '
      parameters:
        - name: body
          description: The request body.
          in: body
          schema:
            $ref: '#/definitions/TransferFundsRequest'
      responses:
        default:
          description: Successful operation
          schema:
            $ref: '#/definitions/TransferFundsResponse'
  /v3/GetTransferFundsQuotation:
    post:
      tags:
        - payment_integrator_banking_fop_api
      operationId: GetQuotation
      description: 'GetTransferFundsQuotation. The goal of this RPC is to obtain the relevant information about a transfer to present those details to the user for their evaluation. The evaluation criteria can be presented in the form of a set of challenges, such as: 1) Acknowledgement of the resolved identity of the payee proxy; Note: we will omit this for the first iteration; we assume that payee proxy lookup has already been performed in a previous GetPayeeProxyDisplayInfo call. 2) Agreement to quoted transfer parameters, including calculated transfer fees, 3) Re-authentication or 2FA, e.g. OTP. If the user approves of the terms of a transfer, a subsequent TransferFunds call is made. An example request looks like: { "requestHeader": { "protocolVersion": { "major": 2 }, "requestId": "bWVyY2hhbnQgdHJhbnN", "requestTimestamp": { "epochMillis": "1502220196077" }, "paymentIntegratorAccountId": "Mojaloop" }, "associationId": "ZXhhbXBsZSB1bmlxdWUgcGF5bWVudC", "transactionDescription": "Payment", "amount": { "amountMicros": "5000000", "currencyCode": "SGD" }, "payeeProxy": { "payeeProxyKey": { "networkId": "paynow", "phoneNumber": "+6577778888" }, "payeeProxyLookupRequestId": "bWVyY2hhbnQgdHJhbnN" } }'
      parameters:
        - name: body
          description: The request body.
          in: body
          schema:
            $ref: '#/definitions/GetTransferFundsQuotationRequest'
      responses:
        default:
          description: Successful operation
          schema:
            $ref: '#/definitions/GetTransferFundsQuotationResponse'
  /v2/disburse:
    post:
      tags:
        - payment_integrator_banking_fop_api
      operationId: Disburse
      description: This method performs a disburse from a Google-owned bank account to an account specified in the request.
      parameters:
        - name: body
          description: The request body.
          in: body
          schema:
            $ref: '#/definitions/DisburseRequest'
      responses:
        default:
          description: Successful operation
          schema:
            $ref: '#/definitions/DisburseResponse'
  /v2/getTransferFundsTransactionStatus:
    post:
      tags:
        - payment_integrator_banking_fop_api
      operationId: GetTransferFundsTransactionStatus
      description: This method fetches the status of a TransferFunds transaction.
      parameters:
        - name: body
          description: The request body.
          in: body
          schema:
            $ref: '#/definitions/GetTransferFundsTransactionStatusRequest'
      responses:
        default:
          description: Successful operation
          schema:
            $ref: '#/definitions/GetTransferFundsTransactionStatusResponse'
  /v2/getDisburseTransactionStatus:
    post:
      tags:
        - payment_integrator_banking_fop_api
      operationId: GetDisburseTransactionStatus
      description: This method fetches the status of a disburse transaction.
      parameters:
        - name: body
          description: The request body.
          in: body
          schema:
            $ref: '#/definitions/GetDisburseTransactionStatusRequest'
      responses:
        default:
          description: Successful operation
          schema:
            $ref: '#/definitions/GetDisburseTransactionStatusResponse'
  /v2/getPayeeProxyRegistrationStatus:
    post:
      tags:
        - payment_integrator_banking_fop_api
      operationId: GetPayeeProxyRegistrationStatus
      description: 'Checks whether or not a mapping to a Payee has been registered for the specified proxy key. An example request looks like: { "requestHeader": { "protocolVersion": { "major": 2 }, "requestId": "bWVyY2hhbnQgdHJhbnNhY3Rpb24gaWQ", "requestTimestamp": { "epochMillis": "1502220196077" }, "paymentIntegratorAccountId": "InvisiCashUSA_USD" }, "proxyKey": { "phoneNumber": "+001234567890" } } An example response looks like: { "responseHeader": { "responseTimestamp": { "epochMillis": "1481900013178" } }, "registrationStatus": "REGISTERED" } '
      parameters:
        - name: body
          description: The request body.
          in: body
          schema:
            $ref: '#/definitions/GetPayeeProxyRegistrationStatusRequest'
      responses:
        default:
          description: Successful operation
          schema:
            $ref: '#/definitions/GetPayeeProxyRegistrationStatusResponse'
  /v2/getPayeeProxyDisplayInfo:
    post:
      tags:
        - payment_integrator_banking_fop_api
      operationId: GetPayeeProxyDisplayInfo
      description: 'Returns the display data that has been registered for the specified proxy key (e.g. display name to be shown before payment) An example request looks like: { "requestHeader": { "protocolVersion": { "major": 2 }, "requestId": "bWVyY2hhbnQgdHJhbnNhY3Rpb24gaWQ", "requestTimestamp": { "epochMillis": "1502220196077" }, "paymentIntegratorAccountId": "InvisiCashUSA_USD" }, "proxyKey": { "phoneNumber": "+001234567890" } } An example response looks like: { "responseHeader": { "responseTimestamp": { "epochMillis": "1481900013178" } }, "displayInfoResult": { "success": { "displayInfo": { "displayName": "Sam Payee" } } } } '
      parameters:
        - name: body
          description: The request body.
          in: body
          schema:
            $ref: '#/definitions/GetPayeeProxyDisplayInfoRequest'
      responses:
        default:
          description: Successful operation
          schema:
            $ref: '#/definitions/GetPayeeProxyDisplayInfoResponse'

definitions:
  AssociateAccountRequest:
    description: Request object for the associate account method.
    type: object
    properties:
      requestHeader:
        description: '**REQUIRED**: Common header for all requests.'
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2RequestHeader'
      authenticationRequestId:
        description: '`requestId` of the authentication request that preceded this call. This identifier was generated by Google during the authentication flow. This is only present if the user went through the Android app authentication, web authentication, or an asynchronous authentication method that uses `authenticationResultNotification`.'
        type: string
      provideUserInformation:
        description: '**REQUIRED**: True if we desire the integrator to provide the address associated with this account.'
        type: boolean
      googlePaymentToken:
        description: '**REQUIRED**: The token that Google will use to initiate purchases with the payment processor.'
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2GooglePaymentToken'
      associationId:
        description: '**REQUIRED**: The identifier of this association. This identifier is created by Google and is sent during re-authentication flows to identify which account should be authenticated. This is a string that has a maximum length of 100 characters.'
        type: string
  GoogleStandardpaymentsTypesV2RequestHeader:
    description: Header object that is defined on all requests sent to the server.
    type: object
    properties:
      requestId:
        description: '**REQUIRED**: Unique identifier of this request. This is a string that has a max length of 100 characters, and contains only the characters "a-z", "A-Z", "0-9", ":", "-", and "_".'
        type: string
      requestTimestamp:
        description: '**REQUIRED**: Timestamp of this request. The receiver must verify that this timestamp is ± 60s of ''now'', and reject the request if it is not. This request timestamp is not idempotent upon retries.'
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2Timestamp'
      protocolVersion:
        description: '**REQUIRED**: The version of this request.'
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2Version'
      paymentIntegratorAccountId:
        description: '**REQUIRED**: Identifies a unique account with contractual constraints.'
        type: string
  GoogleStandardpaymentsTypesV2Timestamp:
    description: A timestamp object representing a point on the ISO timeline in milliseconds since the Unix epoch.
    type: object
    properties:
      epochMillis:
        description: Milliseconds since the Unix epoch
        type: string
        format: int64
  GoogleStandardpaymentsTypesV2Version:
    description: Version object contains the major version of the API. Versions of the same major version are guaranteed to be compatible. The integrator must support all requests for the same major version.
    type: object
    properties:
      major:
        description: '**REQUIRED**: Major version. This is marked for compatibility requests with different versions are not guaranteed to be compatible.'
        type: integer
        format: int32
  GoogleStandardpaymentsTypesV2GooglePaymentToken:
    description: Describes a GooglePaymentToken (GPT), including the token and the issuer of the backing user account.
    type: object
    properties:
      issuerId:
        description: '**REQUIRED**: The identifier of the issuer of the backing user account.'
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2IssuerId'
      token:
        description: '**REQUIRED**: This is the token that both companies will use to identify the account for purchases between each other.'
        type: string
  GoogleStandardpaymentsTypesV2IssuerId:
    description: A unique identifier for an issuer of user accounts.
    type: object
    properties:
      value:
        description: '**REQUIRED**: The string value of the identifier. This unique identifier is defined by Google. Google will share a list with the identifiers for all external issuers available via the payment integrator.'
        type: string
  AssociateAccountResponse:
    description: Response object for the associate account method.
    type: object
    properties:
      responseHeader:
        description: '**REQUIRED**: Common header for all responses.'
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2ResponseHeader'
      result:
        description: '**REQUIRED**: Result of this association.'
        $ref: '#/definitions/AssociateAccountResponseAssociateAccountResult'
  GoogleStandardpaymentsTypesV2ResponseHeader:
    description: Header object that is defined on all responses sent from the server.
    type: object
    properties:
      responseTimestamp:
        description: '**REQUIRED**: Timestamp of this response. The receiver must verify that this timestamp is ± 60s of ''now'', and reject the response if it is not.'
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2Timestamp'
  AssociateAccountResponseAssociateAccountResult:
    type: object
    properties:
      success:
        description: The account association was successful.
        $ref: '#/definitions/AssociateAccountResponseAssociateAccountResultSuccessDetails'
      userAuthenticationFailed:
        description: Even though the account authentication bundle was returned, the user authentication failed.
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2Empty'
      notEligible:
        description: User's account is not eligible for this service.
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2Empty'
      otpNotMatched:
        description: OTP did not match what the integrator sent.
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2Empty'
      otpAlreadyUsed:
        description: OTP was already used.
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2Empty'
      otpLimitReached:
        description: User has requested or tried to verify too many OTPs.
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2Empty'
  AssociateAccountResponseAssociateAccountResultSuccessDetails:
    type: object
    properties:
      associatedAccountIdentifier:
        description: The account ID the user has with the integrator.
        $ref: '#/definitions/AssociatedAccountIdentifier'
      bankAccountIdentifier:
        description: The account ID the user has with a bank.
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2BankAccountIdentifier'
      associatedAccountDetails:
        description: Details about the account that was associated.
        $ref: '#/definitions/AssociatedAccountDetails'
      bankAccountDetails:
        description: Details about the bank account that was associated.
        $ref: '#/definitions/MaskedBankAccountDetails'
      transactionLimits:
        description: '**REQUIRED**: Defines user scoped transaction limits.'
        $ref: '#/definitions/TransactionLimits'
      userInformation:
        description: '**REQUIRED**: User information that the integrator knows and will share with Google about this customer. Used for risk information and address prepopulation.'
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2UserInformation'
  AssociatedAccountIdentifier:
    type: object
    properties:
      accountId:
        description: '**REQUIRED**: The account ID the user has with the integrator. This is used for Google risk to understand account re-use and account relationships and Google customer operation agents to help customers diagnose issues. This value must be immutable for the life of the account.'
        type: string
  GoogleStandardpaymentsTypesV2BankAccountIdentifier:
    description: Unique identifier of a bank account.
    type: object
    properties:
      singaporeBankAccount:
        description: An account with a bank in Singapore.
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2SgBankAccount'
      usBankAccount:
        description: An account with a bank in the United States.
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2UsBankAccount'
      japanBankAccount:
        description: An account with a bank in Japan.
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2JapanBankAccount'
  GoogleStandardpaymentsTypesV2SgBankAccount:
    description: Details of a user's bank account in SG.
    type: object
    properties:
      sgFastBankAccount:
        description: FAST-related bank account details.
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2SgFastBankAccount'
      localBankIdentifier:
        description: Bank Id with local identifiers.
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2SgLocalBankIdentifier'
  GoogleStandardpaymentsTypesV2SgFastBankAccount:
    description: Details of a customer's bank account in SG that are relevant for operations that involve the FAST payment network.
    type: object
    properties:
      localAccountNumber:
        description: The local account number for this account.
        type: string
      swiftBic:
        description: SWIFT Business Identifier Code as defined in ISO 9362.
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2SwiftBusinessIdentifierCode'
  GoogleStandardpaymentsTypesV2SwiftBusinessIdentifierCode:
    description: SWIFT Business Identifier Code as defined in ISO 9362.
    type: object
    properties:
      value:
        description: An 8-character code, defined as 'business party identifier', consisting of the business party prefix (4 alphanumeric), the country code as defnied in ISO 3166-1 (2 alphabetic), and the business party suffix (2 alphanumeric). The branch identifier is a 3-character optional element that can supplement the 8-character BIC, used to identify specific location, departments, services or units of the same business party.
        type: string
  GoogleStandardpaymentsTypesV2SgLocalBankIdentifier:
    description: Local Ids for a bank in Singapore.
    type: object
    properties:
      localBankCode:
        description: Bank code of the customer bank.
        type: string
      localBranchCode:
        description: Code of the branch where the customer account is located.
        type: string
  GoogleStandardpaymentsTypesV2UsBankAccount:
    description: Details of a user's bank account in the US.
    type: object
    properties:
      accountNumber:
        description: Account number for the bank account.
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2DomesticBankAccountNumber'
      bankIdentifier:
        description: Globally identifies the bank where this account is held.
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2UsBankIdentifier'
  GoogleStandardpaymentsTypesV2DomesticBankAccountNumber:
    description: Local representation of a bank account number for domestic transfers.
    type: object
    properties:
      number:
        description: The local bank account number.
        type: string
  GoogleStandardpaymentsTypesV2UsBankIdentifier:
    description: Identifiers for a Bank in the United States.
    type: object
    properties:
      swiftBic:
        description: SWIFT Business Identifier Code as defined in ISO 9362.
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2SwiftBusinessIdentifierCode'
      usAbaRoutingNumber:
        description: US ABA routing number (ABA RTN).
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2AbaRoutingTransitNumber'
  GoogleStandardpaymentsTypesV2AbaRoutingTransitNumber:
    description: An American Bankers Association (ABA) routing transit number (ABA RTN).
    type: object
    properties:
      value:
        description: ABA routing transit number.
        type: string
  GoogleStandardpaymentsTypesV2JapanBankAccount:
    description: Details of a user's bank account in Japan.
    type: object
    properties:
      localAccountNumber:
        description: Local account number for the bank account.
        type: string
      localBankIdentifier:
        description: Bank ID with local identifiers.
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2JapanLocalBankIdentifier'
  GoogleStandardpaymentsTypesV2JapanLocalBankIdentifier:
    description: Local IDs for a bank in Japan.
    type: object
    properties:
      localBankCode:
        description: Bank code of the customer bank.
        type: string
      localBranchCode:
        description: Code of the branch where the customer account is located.
        type: string
  AssociatedAccountDetails:
    type: object
    properties:
      accountNickname:
        description: Nickname by which the user knows this account for display purposes.
        $ref: '#/definitions/AssociatedAccountNickname'
      accountAlias:
        description: '**OPTIONAL**: An additional account alias the user might use to identify their vendor account. These are used by Google customer operation agents to help customers diagnose issues. These aliases should be user recognizable (for example the user knows this alias because it appears on their statement or appears on the website after they log into the account).'
        $ref: '#/definitions/GoogleStandardpaymentsTypesTokenizedFopV2AccountAlias'
      accountType:
        description: '**OPTIONAL**: Account type information that will be used to tailor display messages to users. For example, this could contain information about the payment plan the user has with the integrator for this account.'
        $ref: '#/definitions/AccountType'
  AssociatedAccountNickname:
    type: object
    properties:
      partialAccountNickname:
        description: String by which the user knows this account for display purposes. This is a suffix of the account nickname. For example last four digits of a phone number. Google will indicate in the user interface that this is only a suffix of the nickname. *Caution:* This value can be PII, but must never be SPII. This value will be displayed in UIs like the purchase flow to allow the user to distinguish between payment methods. *Note:* that either this value or the `full_account_nickname` must be present, never both.
        type: string
      fullAccountNickname:
        description: String by which the user knows this account for display purposes. Unlike `account_nickname` this is the full account nickname. For example `56565-56501` for a phone number or sally@sample-email.com for an email identity. *Caution:* This value can be PII, but must never be SPII. This value will be displayed in UIs like the purchase flow to allow the user to distinguish between payment methods. *Note:* that either this value or the `account_nickname` must be present, never both.
        type: string
  GoogleStandardpaymentsTypesTokenizedFopV2AccountAlias:
    description: Defines the type and value of an alias that a user associates with their vendor account.
    type: object
    properties:
      phoneNumber:
        description: The phone number the user has on file with the integrator.
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2PhoneNumber'
      emailAddress:
        description: The email address the user has on file with the integrator.
        type: string
  GoogleStandardpaymentsTypesV2PhoneNumber:
    description: An E.164 formatted phone number. Examples include +14035551111 and +918067218000. This will always lead with a + and include only numbers afterwards (no dashes).
    type: object
    properties:
      value:
        description: '**REQUIRED**: This is a E.164 formatted phone number. Examples include +14035551111 and +918067218000. This will always lead with a + and include only numbers afterwards (no dashes).'
        type: string
  AccountType:
    type: object
    properties:
      wirelessCarrierAccountType:
        $ref: '#/definitions/WirelessCarrierAccountType'
  WirelessCarrierAccountType:
    description: The account type the user has with a wireless carrier. This is used to tailor display messages to the users. For example, the payment dialog for a user with a prepaid plan may say "deduct from your carrier balance", rather than "bill to your carrier account."
    type: object
    properties:
      prepaid:
        description: Indicates the user is on a prepaid payment plan with their wireless carrier (e.g. the user pays for the coming month). Payments made with this account will be deducted from the prepaid balance.
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2Empty'
      postpaid:
        description: Indicates the user is on a postpaid payment plan with their wireless carrier (e.g. the user pays for the prior month). Payments made with this account will accrue until the balance is paid off.
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2Empty'
      enterprise:
        description: Indicates the user is part of an enterprise wireless plan (e.g. the user is on a shared corporate phone plan).
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2Empty'
      willNotProvidePii:
        description: Indicates the carrier will not provide this information because a user's payment plan is considered PII, or because the carrier is otherwise legally obligated not to share this information.
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2Empty'
      controlPlan:
        description: Indicates the user is on a control plan with their wireless carrier. This could be a payment plan where the user pays the same monthly fee, and calls or charges made against by the user are debited from this monthly fee. Once the monthly fee amount is exhausted, certain services are limited or disabled unless the user makes a mid-cycle payment to re-enable these services.
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2Empty'
  GoogleStandardpaymentsTypesV2Empty:
    description: ' This object is used for extensibility because booleans and enumerations often need to be extended with extra data. The implementer uses it to determine presence. The enumeration this represents may be extended to contain data in future versions. The JSON representation for `Empty` is empty JSON object `{}`.'
    type: object
    properties: {}
  MaskedBankAccountDetails:
    description: Masked account details of a bank account.
    type: object
    properties:
      accountNumberSuffix:
        description: Suffix of the account number.
        type: string
      bankAccountType:
        description: Account type of the bank account.
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2BankAccountType'
      bankAccountMetadata:
        description: Metadata about this account.
        $ref: '#/definitions/BankAccountMetadata'
  GoogleStandardpaymentsTypesV2BankAccountType:
    description: Account type of a bank account.
    type: object
    properties:
      type:
        type: string
        enum:
          - TYPE_UNSPECIFIED
          - SAVINGS
          - CHECKING
          - CURRENT
  BankAccountMetadata:
    description: Metadata about the bank account.
    type: object
    properties:
      bankingProductName:
        description: The banking product name of this account.
        type: string
  TransactionLimits:
    type: object
    properties:
      transactionMaxLimit:
        description: '**REQUIRED**: Defines the value and currency of a maximum per transaction limit for this account, or states that no maximum per transaction limit exists.'
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2TransactionLimit'
  GoogleStandardpaymentsTypesV2TransactionLimit:
    description: Defines a transaction limit amount or the absence of a limit.
    type: object
    properties:
      limitAmount:
        description: The value of the allowable transaction. This is used to determine whether or not the user should be given this integrator as an option to process a specific transaction. *Note:* that either this value or the `no_limit` can be present, never both.
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2Amount'
      noLimit:
        description: Indicates that there is no transaction limit. This is used to determine whether or not the user should be given this integrator as an option to process a specific transaction. *Note:* that either this value or the `limit_amount` can be present, never both.
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2Empty'
  GoogleStandardpaymentsTypesV2Amount:
    description: Associates an amount in micros with a currency code.
    type: object
    properties:
      amountMicros:
        description: '**REQUIRED**: An amount in [micros] (https://developers.google.com/standard-payments/reference/glossary#micros "What are micros?").'
        type: string
        format: int64
      currencyCode:
        description: '**REQUIRED**: ISO 4217 3-letter currency code'
        type: string
  GoogleStandardpaymentsTypesV2UserInformation:
    description: Structure holding information about a user.
    type: object
    properties:
      name:
        description: '**OPTIONAL**: Customer''s full name.'
        type: string
      addressLine:
        description: '**OPTIONAL**: This holds unstructured Address text.'
        type: array
        items:
          type: string
      localityName:
        description: '**OPTIONAL**: This is something of a fuzzy term, but it generally refers to the city/town portion of an address. In regions of the world where localities are not well defined or do not fit into this structure well (for example, Japan and China), leave locality_name empty and use address_line. Examples: US city, IT comune, UK post town.'
        type: string
      administrativeAreaName:
        description: '**OPTIONAL**: Top-level administrative subdivision of this country" Examples: US state, IT region, CN province, JP prefecture."'
        type: string
      postalCodeNumber:
        description: '**OPTIONAL**: Despite the name, postal_code_number values are frequently alphanumeric. Examples: "94043", "SW1W", "SW1W 9TQ".'
        type: string
      countryCode:
        description: '**OPTIONAL**: Customer address country code, expected to be ISO-3166-1 Alpha-2.'
        type: string
      phone:
        description: '**OPTIONAL**: Customer''s phone number.'
        type: string
      emailAddress:
        description: '**OPTIONAL**: Customer''s email address.'
        type: string
  AssociateAccountWithVendorGeneratedTokenRequest:
    description: Request object for the AssociateAccountWithVendorGeneratedToken method.
    type: object
    properties:
      requestHeader:
        description: '**REQUIRED**: Common header for all requests.'
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2RequestHeader'
      authenticationRequestId:
        description: '**OPTIONAL**: `requestId` of the authentication request that preceded this call. This identifier was generated by Google during the authentication flow. This is only present if the user went through the Android app authentication, web authentication, or an asynchronous authentication method that uses `authenticationResultNotification`.'
        type: string
      otpVerification:
        description: Data necessary to verify an OTP generated from `sendOtp`. This is only present if the user went through the `sendOtp` path.
        $ref: '#/definitions/GoogleStandardpaymentsTypesV1OtpVerification'
      provideUserInformation:
        description: '**REQUIRED**: True if we desire the Integrator to provide the address associated with this account.'
        type: boolean
      associationId:
        description: '**REQUIRED**: The identifier of this association. This identifier is created by Google and is sent during re-authentication flows to identify which account should be authenticated. This is a string that has a maximum length of 100 characters.'
        type: string
  GoogleStandardpaymentsTypesV1OtpVerification:
    description: Object that encapsulates the OTP verification response.
    type: object
    properties:
      sendOtpRequestId:
        description: '**REQUIRED**: This is the `requestId` generated by Google during the `sendOtp` call which this request is associated with.'
        type: string
      otp:
        description: '**REQUIRED**: This is the OTP the user provided if this call was preceded by a `sendOtp` call'
        type: string
  AssociateAccountWithVendorGeneratedTokenResponse:
    description: Response object for the AssociateAccountWithVendorGeneratedToken method.
    type: object
    properties:
      responseHeader:
        description: '**REQUIRED**: Common header for all responses.'
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2ResponseHeader'
      paymentIntegratorAssociateAccountId:
        description: '**DEPRECATED**: This identifier is specific to the integrator and is generated by the integrator. It is used for debugging purposes only in order to identify this call. This is the identifier that the integrator knows this call by.'
        type: string
      result:
        description: '**REQUIRED**: Result of this association.'
        $ref: '#/definitions/AssociateAccountWithVendorGeneratedTokenResponseAssociateAccountResult'
  AssociateAccountWithVendorGeneratedTokenResponseAssociateAccountResult:
    type: object
    properties:
      success:
        description: The account association was successful.
        $ref: '#/definitions/AssociateAccountWithVendorGeneratedTokenResponseAssociateAccountResultSuccessDetails'
      userAuthenticationFailed:
        description: Even though the account authentication bundle was returned, the user authentication failed.
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2UserAuthenticationFailed'
      notEligible:
        description: User's account is not eligible for this service.
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2AccountNotEligible'
      otpNotMatched:
        description: OTP did not match what the integrator sent.
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2OtpNotMatched'
      otpAlreadyUsed:
        description: OTP was already used.
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2OtpAlreadyUsed'
      otpLimitReached:
        description: User has requested or tried to verify too many OTPs.
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2OtpLimitReached'
  AssociateAccountWithVendorGeneratedTokenResponseAssociateAccountResultSuccessDetails:
    type: object
    properties:
      vendorPaymentToken:
        description: '**REQUIRED**: This is the token that both companies will use to identify the bank account that is associated during this method. This identifies the payer bank account in `transferFunds` calls. This is a string that has a maximum length of 100 characters.'
        type: string
      tokenExpirationTime:
        description: '**OPTIONAL**: Timestamp when the token expires. Use `0` to signal the token does not expire.'
        $ref: '#/definitions/GoogleStandardpaymentsTypesV1Timestamp'
      accountDetails:
        description: '**DEPRECATED**: Details about the account that was associated during the call.'
        $ref: '#/definitions/AssociatedAccountDetails'
      accountId:
        description: '**DEPRECATED**: The account ID the user has with the integrator.'
        $ref: '#/definitions/AssociatedAccountIdentifier'
      associatedAccountIdentifier:
        description: The account ID the user has with the integrator.
        $ref: '#/definitions/AssociatedAccountIdentifier'
      bankAccountIdentifier:
        description: The account ID the user has with a bank.
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2BankAccountIdentifier'
      associatedAccountDetails:
        description: Details about the account that was associated.
        $ref: '#/definitions/AssociatedAccountDetails'
      bankAccountDetails:
        description: Details about the bank account that was associated.
        $ref: '#/definitions/MaskedBankAccountDetails'
      transactionLimits:
        description: '**REQUIRED**: Defines user scoped transaction limits.'
        $ref: '#/definitions/TransactionLimits'
      userInformation:
        description: '**REQUIRED**: User information that the integrator knows and will share with Google about this customer. Used for risk information and address prepopulation.'
        $ref: '#/definitions/GoogleStandardpaymentsTypesV1UserInformation'
  GoogleStandardpaymentsTypesV1Timestamp:
    description: A timestamp object representing a point on the ISO timeline in milliseconds since the Unix epoch.
    type: object
    properties:
      epochMillis:
        description: Milliseconds since the Unix epoch
        type: string
        format: int64
  GoogleStandardpaymentsTypesV1UserInformation:
    description: Structure holding information about a user.
    type: object
    properties:
      name:
        description: '**OPTIONAL**: Customer''s full name.'
        type: string
      addressLine:
        description: '**OPTIONAL**: This holds unstructured Address text.'
        type: array
        items:
          type: string
      localityName:
        description: '**OPTIONAL**: This is something of a fuzzy term, but it generally refers to the city/town portion of an address. In regions of the world where localities are not well defined or do not fit into this structure well (for example, Japan and China), leave locality_name empty and use address_line. Examples: US city, IT comune, UK post town.'
        type: string
      administrativeAreaName:
        description: '**OPTIONAL**: Top-level administrative subdivision of this country" Examples: US state, IT region, CN province, JP prefecture."'
        type: string
      postalCodeNumber:
        description: '**OPTIONAL**: Despite the name, postal_code_number values are frequently alphanumeric. Examples: "94043", "SW1W", "SW1W 9TQ".'
        type: string
      countryCode:
        description: '**OPTIONAL**: Customer address country code, expected to be ISO-3166-1 Alpha-2.'
        type: string
      phone:
        description: '**OPTIONAL**: Customer''s phone number.'
        type: string
      emailAddress:
        description: '**OPTIONAL**: Customer''s email address.'
        type: string
  GoogleStandardpaymentsTypesV2UserAuthenticationFailed:
    description: The user failed to authenticate with the integrator.
    type: object
    properties:
      rawResult:
        description: '**OPTIONAL**: Raw result of this event. Used to help inform Google''s risk engine and analytics. In decline code–mapping situations, data is sometimes lost. The integrator can choose to give Google a raw code. For example, a credit card gateway (the integrator) may use this field to communicate to Google the exact decline code that was received from the VISA network. In that case, the `scope` would be "visa" and the `raw_code` would be whatever the VISA network returned.'
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2RawResult'
  GoogleStandardpaymentsTypesV2RawResult:
    description: Raw result object.
    type: object
    properties:
      scope:
        description: '**OPTIONAL**: Scope of the raw_code, can be empty.'
        type: string
      rawCode:
        description: '**REQUIRED**: Raw code from the integrator or subsystems within it.'
        type: string
  GoogleStandardpaymentsTypesV2AccountNotEligible:
    description: User's account is not eligible for this service.
    type: object
    properties:
      rawResult:
        description: '**OPTIONAL**: Raw result of this event. Used to help inform Google''s risk engine and analytics. In decline code–mapping situations, data is sometimes lost. The integrator can choose to give Google a raw code. For example, a credit card gateway (the integrator) may use this field to communicate to Google the exact decline code that was received from the VISA network. In that case, the `scope` would be "visa" and the `raw_code` would be whatever the VISA network returned.'
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2RawResult'
  GoogleStandardpaymentsTypesV2OtpNotMatched:
    description: OTP did not match what the integrator sent.
    type: object
    properties:
      rawResult:
        description: '**OPTIONAL**: Raw result of this event. Used to help inform Google''s risk engine and analytics. In decline code–mapping situations, data is sometimes lost. The integrator can choose to give Google a raw code. For example, a credit card gateway (the integrator) may use this field to communicate to Google the exact decline code that was received from the VISA network. In that case, the `scope` would be "visa" and the `raw_code` would be whatever the VISA network returned.'
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2RawResult'
  GoogleStandardpaymentsTypesV2OtpAlreadyUsed:
    description: OTP was already used.
    type: object
    properties:
      rawResult:
        description: '**OPTIONAL**: Raw result of this event. Used to help inform Google''s risk engine and analytics. In decline code–mapping situations, data is sometimes lost. The integrator can choose to give Google a raw code. For example, a credit card gateway (the integrator) may use this field to communicate to Google the exact decline code that was received from the VISA network. In that case, the `scope` would be "visa" and the `raw_code` would be whatever the VISA network returned.'
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2RawResult'
  GoogleStandardpaymentsTypesV2OtpLimitReached:
    description: User has requested or tried to verify too many OTPs.
    type: object
    properties:
      rawResult:
        description: '**OPTIONAL**: Raw result of this event. Used to help inform Google''s risk engine and analytics. In decline code–mapping situations, data is sometimes lost. The integrator can choose to give Google a raw code. For example, a credit card gateway (the integrator) may use this field to communicate to Google the exact decline code that was received from the VISA network. In that case, the `scope` would be "visa" and the `raw_code` would be whatever the VISA network returned.'
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2RawResult'
  DisassociateAccountRequest:
    description: Request object for the disassociate account method.
    type: object
    properties:
      requestHeader:
        description: '**REQUIRED**: Common header for all requests.'
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2RequestHeader'
      googlePaymentToken:
        $ref: '#/definitions/GoogleStandardpaymentsTypesV1GooglePaymentToken'
      vendorPaymentToken:
        $ref: '#/definitions/GoogleStandardpaymentsTypesV1VendorPaymentToken'
  GoogleStandardpaymentsTypesV1GooglePaymentToken:
    description: Describes a GooglePaymentToken (GPT), including the token and the issuer of the backing user account.
    type: object
    properties:
      issuerId:
        description: '**REQUIRED**: The identifier of the issuer of the backing user account.'
        $ref: '#/definitions/GoogleStandardpaymentsTypesV1IssuerId'
      token:
        description: '**REQUIRED**: This is the token that both companies will use to identify the account for purchases between each other.'
        type: string
  GoogleStandardpaymentsTypesV3ChallengeResults:
    description: 'Contains a list of responses to challenges that have been requested in the preceding quotation response. This could be an OTP token, FIDO2 assertion, and so on.'
    type: object
    properties:
      challengeOptionId:
        type: string
      fidoAssertion:
        $ref: '#/definitions/GoogleStandardpaymentsTypesV3FidoAssertion'
  GoogleStandardpaymentsTypesV3FidoAssertion:
    description: 'Fido Assertion'
    type: object
    properties:
      rawId:
        type: string
      id:
        type: string
      response:
        $ref: '#/definitions/GoogleStandardpaymentsTypesV3FidoAssertionResponse'
      type:
        type: string
  GoogleStandardpaymentsTypesV3FidoAssertionResponse:
    description: 'Reponse in Fido Assertion'
    type: object
    properties:
      authenticatorData:
        type: string
      signature:
        type: string
      userHandle:
        type: string
      clientDataJSON:
        type: string
  GoogleStandardpaymentsTypesV1IssuerId:
    description: A unique identifier for an issuer of user accounts.
    type: object
    properties:
      value:
        description: '**REQUIRED**: The string value of the identifier. This unique identifier is defined by Google. Google will share a list with the identifiers for all external issuers available via the payment integrator.'
        type: string
  GoogleStandardpaymentsTypesV1VendorPaymentToken:
    description: Describes a VendorPaymentToken (VPT), including the token and the issuer of the backing user account.
    type: object
    properties:
      issuerId:
        description: '**REQUIRED**: The identifier of the issuer of the backing user account.'
        $ref: '#/definitions/GoogleStandardpaymentsTypesV1IssuerId'
      token:
        description: '**REQUIRED**: This is the token that both companies will use to identify the account for purchases between each other.'
        type: string
  DisassociateAccountResponse:
    description: Response object for the disassociate account method.
    type: object
    properties:
      responseHeader:
        description: '**REQUIRED**: Common header for all responses.'
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2ResponseHeader'
      result:
        description: '**REQUIRED**: Result of this disassociation.'
        $ref: '#/definitions/DisassociateAccountResponseDisassociateAccountResult'
  DisassociateAccountResponseDisassociateAccountResult:
    description: Result for disassociate account.
    type: object
    properties:
      success:
        description: The account disassociation was successful.
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2Empty'
  TransferFundsRequest:
    description: Request object for the TransferFunds method.
    type: object
    properties:
      requestHeader:
        description: '**REQUIRED**: Common header for all requests.'
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2RequestHeader'
      googlePaymentToken:
        $ref: '#/definitions/GoogleStandardpaymentsTypesV1GooglePaymentToken'
      vendorPaymentToken:
        $ref: '#/definitions/GoogleStandardpaymentsTypesV1VendorPaymentToken'
      transactionDescription:
        description: '**REQUIRED**: This is the description of the transaction that can be put on the customer''s statement. Localized to the userLocale found in the `request_header`. This format can be changed without notice and must never be parsed.'
        type: string
      amount:
        description: '**REQUIRED**: The amount of the transfer'
        $ref: '#/definitions/GoogleStandardpaymentsTypesV1Amount'
      payeeProxy:
        description: Payee that is referenced by a PayeeProxyKey
        $ref: '#/definitions/PayeeProxyDestination'
      getTransferFundsQuotationRequestId:
        description: 'This ID links the TransferFunds call to the preceding quotation'
        type: string
      challengeResults:
        $ref: '#/definitions/GoogleStandardpaymentsTypesV3ChallengeResults'
  GetTransferFundsQuotationRequest:
    description: Request object for the GetTransferFundsQuotation method.
    type: object
    properties:
      requestHeader:
        description: '**REQUIRED**: Common header for all requests.'
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2RequestHeader'
      associationId:
        description: '**REQUIRED**: The identifier of this association. This identifier is created by Google and is sent during re-authentication flows to identify which account should be authenticated. This is a string that has a maximum length of 100 characters.'
        type: string
      transactionDescription:
        description: '**REQUIRED**: This is the description of the transaction that can be put on the customer''s statement. Localized to the userLocale found in the `request_header`. This format can be changed without notice and must never be parsed.'
        type: string
      amount:
        description: '**REQUIRED**: The amount of the transfer'
        $ref: '#/definitions/GoogleStandardpaymentsTypesV1Amount'
      payeeProxy:
        description: Payee that is referenced by a PayeeProxyKey
        $ref: '#/definitions/PayeeProxyDestination'
      googlePaymentToken:
        description: Google payment token
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2GooglePaymentToken'
  GetTransferFundsQuotationResponse:
    description: Response object for the GetTransferFundsQuotation method.
    type: object
    properties:
      responseHeader:
        description: '**REQUIRED**: Common header for all responses.'
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2ResponseHeader'
      result:
        description: Result of the GetTransferFundsQuotation
        $ref: '#/definitions/GoogleStandardpaymentsTypesV3Result'
  GoogleStandardpaymentsTypesV3Result:
    description: Results object of the GetTransferFundsQuotationResponse
    properties:
      success:
        $ref: '#/definitions/GoogleStandardpaymentsTypesV3Success'
  GoogleStandardpaymentsTypesV3Success:
    description: Success object of the GetTransferFundsQuotationResponse Result
    properties:
      feeAmount:
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2Amount'
      challengeOptions:
        $ref: '#/definitions/GoogleStandardpaymentsTypesV3ChallengeOptions'
  GoogleStandardpaymentsTypesV3ChallengeOptions:
    description: ChallengeOptions object of the GetTransferFundsQuotationResponse Result Success
    properties:
      challengeOptionId:
        type: string
      fido:
        $ref: '#/definitions/GoogleStandardpaymentsTypesV3Fido'
  GoogleStandardpaymentsTypesV3Fido:
    description: Fido object of the GetTransferFundsQuotationResponse Result Success ChallengeOptions
    properties:
      challenge:
        type: string
      allowCredentials:
        $ref: '#/definitions/GoogleStandardpaymentsTypesV3AllowCredentials'
  GoogleStandardpaymentsTypesV3AllowCredentials:
    description: AllowCredentials object of the GetTransferFundsQuotationResponse Result Success ChallengeOptions Fido
    properties:
      type:
        type: string
      id:
        type: string
  GoogleStandardpaymentsTypesV1Amount:
    description: Associates an amount in micros with a currency code.
    type: object
    properties:
      amountMicros:
        description: '**REQUIRED**: An amount in [micros] (https://developers.google.com/standard-payments/reference/glossary#micros "What are micros?").'
        type: string
        format: int64
      currencyCode:
        description: '**REQUIRED**: ISO 4217 3-letter currency code'
        type: string
  GoogleBankAccount:
    description: This object represents a bank account that is owned by Google and may receive funds as part of a transfer.
    type: object
    properties:
      bankAccountId:
        description: The id of a specific Google-owned bank account.
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2BankAccountIdentifier'
  DestinationBankAccount:
    description: This object represents a bank account that is not owned by Google.
    type: object
    properties:
      bankAccountId:
        description: The id of the non-Google-owned bank account.
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2BankAccountIdentifier'
      bankAccountOwner:
        description: Information about the owner of the destination bank account.
        $ref: '#/definitions/BankAccountOwner'
  BankAccountOwner:
    description: This object holds information about the owner of the account that is the destination of a funds transfer.
    type: object
    properties:
      name:
        description: Name of the account holder (if present).
        type: string
  PayeeProxyDestination:
    description: Destination for Payee that uses a PayeeProxy key to reference a payee.
    type: object
    properties:
      payeeProxyKey:
        description: '**REQUIRED**: Proxy Key that will be used for the Payee.'
        $ref: '#/definitions/PayeeProxyKey'
      payeeProxyLookupRequestId:
        description: '**OPTIONAL**: `requestId` from a lookup for this PayeeProxyKey (if applicable). This value will be set when there was a DisplayInfo lookup done for this PayeeProxyKey in the context of this transfer.'
        type: string
  PayeeProxyKey:
    description: ProxyKey that may be used as a Payee if the proxy key is registered with a PayeeProxy directory and may be used to query the registration status or to retrieve display information from the directory.
    type: object
    properties:
      phoneNumber:
        description: A proxy key that is a phone number.
        type: string
      nationalId:
        description: A proxy key that is a national ID number.
        $ref: '#/definitions/ProxyKeyNationalId'
      businessId:
        description: A proxy key that is a business ID number.
        type: string
      virtualPaymentAddress:
        description: A proxy key that is a virtual payment address.
        type: string
      networkId:
        description: '**REQUIRED**: Network Id for the payee proxy. For example, ‘PaymentNetwork1'', ''PaymentNetwork2'', etc.'
        type: string
  ProxyKeyNationalId:
    description: A proxy key that is a national ID number.
    type: object
    properties:
      nationalId:
        description: '**REQUIRED**: The value of the national ID number.'
        type: string
      issuingCountryCode:
        description: '**REQUIRED**: ID issuing country''s country code, expected to be ISO-3166-1 Alpha-2.'
        type: string
  TransferFundsResponse:
    description: Response object for the funds transfer method.
    type: object
    properties:
      responseHeader:
        description: '**REQUIRED**: Common header for all responses.'
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2ResponseHeader'
      paymentIntegratorTransactionId:
        description: '**OPTIONAL**: This identifier is specific to the integrator and is generated by the integrator. This is the identifier that the integrator knows this transaction by. For convenience, this identifier is included with in the remittance details'
        type: string
      result:
        description: Result of the FundsTransfer operation.
        $ref: '#/definitions/TransferFundsResponseTransferFundsResult'
      resultNotKnownYet:
        description: Captures the scenario where the integrator itself doesn't have a definite status, maybe because they have not received it from the underlying payment network.
        $ref: '#/definitions/TransactionResultNotKnownYet'
  TransferFundsResponseTransferFundsResult:
    description: Results for transfer
    type: object
    properties:
      success:
        description: Successful transfer.
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2Empty'
      chargeExceedsTransactionLimit:
        description: This transfer request's `amount` exceeds per-transaction limit. If this code is used populate the transaction_limit field for user messaging purposes.
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2ChargeExceedsTransactionLimit'
      chargeExceedsDailyLimit:
        description: This account cannot be used for transfers right now as it has exceeded its daily limits.
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2ChargeExceedsDailyLimit'
      chargeExceedsMonthlyLimit:
        description: This account cannot be used for transfers right now as it has exceeded its monthly limits.
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2ChargeExceedsMonthlyLimit'
      chargeUnderLimit:
        description: This transfer request's `amount` does not meet the minimum transaction amount.
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2ChargeUnderLimit'
      insufficientFunds:
        description: This account does not have sufficient funds to guarantee this transfer.
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2InsufficientFunds'
      accountDoesNotSupportCurrency:
        description: This account does not support the requested currency.
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2AccountDoesNotSupportCurrency'
      accountClosed:
        description: The user's account held with the integrator has been closed. Returning this value will cause the user's instrument to be closed with Google. The user will be forced to add a new instrument by going through the association flow again.
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2AccountClosed'
      accountClosedAccountTakenOver:
        description: The user's account with the integrator has been closed, suspected account take over. Returning this value will cause the user's instrument to be closed with Google. The user will be forced to add a new instrument by going through the association flow again.
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2AccountClosedAccountTakenOver'
      accountOnHold:
        description: The account is on hold.
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2AccountOnHold'
      accountClosedFraud:
        description: The user's account held with the integrator has been closed because of fraud. Returning this value will cause the user's instrument to be closed with Google. The user will be forced to add a new instrument by going through the association flow again.
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2AccountClosedFraud'
      googlePaymentTokenInvalidatedByUser:
        description: The account is active, but the GPT has been invalidated by the user on the integrator's side. Returning this value will cause the user's instrument to be closed with Google. The user will be forced to add a new instrument by going through the association flow again.
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2GooglePaymentTokenInvalidatedByUser'
      tokenRefreshRequired:
        description: Returning this requires the user to go through a refresh flow.
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2TokenRefreshRequired'
      payeeProxyNotRegistered:
        description: The payee proxy is not registered.
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2PayeeProxyNotRegistered'
  GoogleStandardpaymentsTypesV2ChargeExceedsTransactionLimit:
    description: This payment request's `amount` exceeds per-transaction limit. If this code is used populate the transaction_limit field for user messaging purposes.
    type: object
    properties:
      rawResult:
        description: '**OPTIONAL**: Raw result of this event. Used to help inform Google''s risk engine and analytics. In decline code–mapping situations, data is sometimes lost. The integrator can choose to give Google a raw code. For example, a credit card gateway (the integrator) may use this field to communicate to Google the exact decline code that was received from the VISA network. In that case, the `scope` would be "visa" and the `raw_code` would be whatever the VISA network returned.'
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2RawResult'
      transactionLimit:
        description: '**REQUIRED**: This is the maximum amount the user could spend on a transaction. The `currencyCode` of `transactionLimit` must match the `currencyCode` of the request.'
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2Amount'
  GoogleStandardpaymentsTypesV2ChargeExceedsDailyLimit:
    description: This account cannot be used for purchases right now as it has exceeded its daily `amount` limits.
    type: object
    properties:
      rawResult:
        description: '**OPTIONAL**: Raw result of this event. Used to help inform Google''s risk engine and analytics. In decline code–mapping situations, data is sometimes lost. The integrator can choose to give Google a raw code. For example, a credit card gateway (the integrator) may use this field to communicate to Google the exact decline code that was received from the VISA network. In that case, the `scope` would be "visa" and the `raw_code` would be whatever the VISA network returned.'
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2RawResult'
  GoogleStandardpaymentsTypesV2ChargeExceedsMonthlyLimit:
    description: This account cannot be used for purchases right now as it has exceeded its monthly `amount` limits.
    type: object
    properties:
      rawResult:
        description: '**OPTIONAL**: Raw result of this event. Used to help inform Google''s risk engine and analytics. In decline code–mapping situations, data is sometimes lost. The integrator can choose to give Google a raw code. For example, a credit card gateway (the integrator) may use this field to communicate to Google the exact decline code that was received from the VISA network. In that case, the `scope` would be "visa" and the `raw_code` would be whatever the VISA network returned.'
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2RawResult'
  GoogleStandardpaymentsTypesV2ChargeUnderLimit:
    description: This request's `amount` does not meet the minimum transaction amount.
    type: object
    properties:
      rawResult:
        description: '**OPTIONAL**: Raw result of this event. Used to help inform Google''s risk engine and analytics. In decline code–mapping situations, data is sometimes lost. The integrator can choose to give Google a raw code. For example, a credit card gateway (the integrator) may use this field to communicate to Google the exact decline code that was received from the VISA network. In that case, the `scope` would be "visa" and the `raw_code` would be whatever the VISA network returned.'
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2RawResult'
      minimumTransactionLimit:
        description: '**OPTIONAL**: This is the minimum amount the user could spend on a transaction. Note: this field will transition to REQUIRED in a future version of the API.'
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2Amount'
  GoogleStandardpaymentsTypesV2InsufficientFunds:
    description: This account does not have sufficient funds to guarantee this capture.
    type: object
    properties:
      rawResult:
        description: '**OPTIONAL**: Raw result of this event. Used to help inform Google''s risk engine and analytics. In decline code–mapping situations, data is sometimes lost. The integrator can choose to give Google a raw code. For example, a credit card gateway (the integrator) may use this field to communicate to Google the exact decline code that was received from the VISA network. In that case, the `scope` would be "visa" and the `raw_code` would be whatever the VISA network returned.'
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2RawResult'
      currentBalance:
        description: '**OPTIONAL**: This is the current available balance for the account. If provided, this value will be included in user-facing messaging.'
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2Amount'
  GoogleStandardpaymentsTypesV2AccountDoesNotSupportCurrency:
    description: This account does not support the requested currency.
    type: object
    properties:
      rawResult:
        description: '**OPTIONAL**: Raw result of this event. Used to help inform Google''s risk engine and analytics. In decline code–mapping situations, data is sometimes lost. The integrator can choose to give Google a raw code. For example, a credit card gateway (the integrator) may use this field to communicate to Google the exact decline code that was received from the VISA network. In that case, the `scope` would be "visa" and the `raw_code` would be whatever the VISA network returned.'
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2RawResult'
  GoogleStandardpaymentsTypesV2AccountClosed:
    description: The user's account held with the integrator has been closed.
    type: object
    properties:
      rawResult:
        description: '**OPTIONAL**: Raw result of this event. Used to help inform Google''s risk engine and analytics. In decline code–mapping situations, data is sometimes lost. The integrator can choose to give Google a raw code. For example, a credit card gateway (the integrator) may use this field to communicate to Google the exact decline code that was received from the VISA network. In that case, the `scope` would be "visa" and the `raw_code` would be whatever the VISA network returned.'
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2RawResult'
  GoogleStandardpaymentsTypesV2AccountClosedAccountTakenOver:
    description: The user's account with the integrator has been closed, suspected account take over.
    type: object
    properties:
      rawResult:
        description: '**OPTIONAL**: Raw result of this event. Used to help inform Google''s risk engine and analytics. In decline code–mapping situations, data is sometimes lost. The integrator can choose to give Google a raw code. For example, a credit card gateway (the integrator) may use this field to communicate to Google the exact decline code that was received from the VISA network. In that case, the `scope` would be "visa" and the `raw_code` would be whatever the VISA network returned.'
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2RawResult'
  GoogleStandardpaymentsTypesV2AccountOnHold:
    description: The account is on hold.
    type: object
    properties:
      rawResult:
        description: '**OPTIONAL**: Raw result of this event. Used to help inform Google''s risk engine and analytics. In decline code–mapping situations, data is sometimes lost. The integrator can choose to give Google a raw code. For example, a credit card gateway (the integrator) may use this field to communicate to Google the exact decline code that was received from the VISA network. In that case, the `scope` would be "visa" and the `raw_code` would be whatever the VISA network returned.'
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2RawResult'
  GoogleStandardpaymentsTypesV2AccountClosedFraud:
    description: The user's account held with the integrator has been closed because of fraud.
    type: object
    properties:
      rawResult:
        description: '**OPTIONAL**: Raw result of this event. Used to help inform Google''s risk engine and analytics. In decline code–mapping situations, data is sometimes lost. The integrator can choose to give Google a raw code. For example, a credit card gateway (the integrator) may use this field to communicate to Google the exact decline code that was received from the VISA network. In that case, the `scope` would be "visa" and the `raw_code` would be whatever the VISA network returned.'
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2RawResult'
  GoogleStandardpaymentsTypesV2GooglePaymentTokenInvalidatedByUser:
    description: The account is active, but the GPT has been invalidated by the user on the integrator's side.
    type: object
    properties:
      rawResult:
        description: '**OPTIONAL**: Raw result of this event. Used to help inform Google''s risk engine and analytics. In decline code–mapping situations, data is sometimes lost. The integrator can choose to give Google a raw code. For example, a credit card gateway (the integrator) may use this field to communicate to Google the exact decline code that was received from the VISA network. In that case, the `scope` would be "visa" and the `raw_code` would be whatever the VISA network returned.'
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2RawResult'
  GoogleStandardpaymentsTypesV2TokenRefreshRequired:
    description: Returning this requires the user to go through a refresh flow.
    type: object
    properties:
      rawResult:
        description: '**OPTIONAL**: Raw result of this event. Used to help inform Google''s risk engine and analytics. In decline code–mapping situations, data is sometimes lost. The integrator can choose to give Google a raw code. For example, a credit card gateway (the integrator) may use this field to communicate to Google the exact decline code that was received from the VISA network. In that case, the `scope` would be "visa" and the `raw_code` would be whatever the VISA network returned.'
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2RawResult'
  GoogleStandardpaymentsTypesV2PayeeProxyNotRegistered:
    description: The payee proxy is not registered.
    type: object
    properties:
      rawResult:
        description: '**OPTIONAL**: Raw result of this event. Used to help inform Google''s risk engine and analytics. In decline code–mapping situations, data is sometimes lost. The integrator can choose to give Google a raw code. For example, a credit card gateway (the integrator) may use this field to communicate to Google the exact decline code that was received from the VISA network. In that case, the `scope` would be "visa" and the `raw_code` would be whatever the VISA network returned.'
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2RawResult'
  TransactionResultNotKnownYet:
    type: object
    properties:
      creditStatusUnknown:
        description: Credit status unknown. This is one of the common scenarios where a transaction is unknown in a real time payment system when debit leg is successful but the credit leg is unknown.
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2Empty'
  DisburseRequest:
    description: Request object for the Disburse method.
    type: object
    properties:
      requestHeader:
        description: '**REQUIRED**: Common header for all requests.'
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2RequestHeader'
      sourceGoogleBankAccount:
        description: The Google-owned bank account that will be used to fund this disburse.
        $ref: '#/definitions/GoogleBankAccount'
      destinationBankAccount:
        description: The non-Google account that is the destination for this disburse.
        $ref: '#/definitions/DestinationBankAccount'
      payeeProxyKey:
        description: Proxy Key that will be used for the Payee.
        $ref: '#/definitions/PayeeProxyKey'
      amount:
        description: '**REQUIRED**: The amount of the transfer'
        $ref: '#/definitions/GoogleStandardpaymentsTypesV1Amount'
      transactionDescription:
        description: '**REQUIRED**: This is the description of the transaction that can be put on the customer''s statement. Localized to the userLocale found in the `request_header`. This format can be changed without notice and must never be parsed.'
        type: string
  DisburseResponse:
    description: Response object for the disburse method.
    type: object
    properties:
      responseHeader:
        description: '**REQUIRED**: Common header for all responses.'
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2ResponseHeader'
      paymentIntegratorTransactionId:
        description: '**OPTIONAL**: This identifier is specific to the integrator and is generated by the integrator. This is the identifier that the integrator knows this transaction by. For convenience, this identifier is included with in the remittance details'
        type: string
      result:
        description: Result of the Disburse operation.
        $ref: '#/definitions/GoogleStandardpaymentsTypesBankingFopV2DisburseResult'
      resultNotKnownYet:
        description: Captures the scenario where the integrator itself doesn't have a definite status, maybe because they have not received it from the underlying payment network.
        $ref: '#/definitions/TransactionResultNotKnownYet'
  GoogleStandardpaymentsTypesBankingFopV2DisburseResult:
    description: Result for disburse.
    type: object
    properties:
      success:
        description: Successful transfer.
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2Empty'
      accountDoesNotSupportCurrency:
        description: This account does not support the requested currency.
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2AccountDoesNotSupportCurrency'
      accountClosed:
        description: The user's account held with the integrator has been closed. Returning this value will cause the user's instrument to be closed with Google. The user will be forced to add a new instrument by going through the association flow again.
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2AccountClosed'
      payeeProxyNotRegistered:
        description: The payee proxy is not registered.
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2PayeeProxyNotRegistered'
  GetTransferFundsTransactionStatusRequest:
    description: Request object for GetTransferFundsTransactionStatus.
    type: object
    properties:
      requestHeader:
        description: '**REQUIRED**: Common header for all requests.'
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2RequestHeader'
      transferFundsRequestId:
        description: '**REQUIRED**: The request_id of the original TransferFunds transaction.'
        type: string
  GetTransferFundsTransactionStatusResponse:
    description: Response object for GetTransferFundsTransactionStatus.
    type: object
    properties:
      responseHeader:
        description: '**REQUIRED**: Common header for all responses.'
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2ResponseHeader'
      result:
        description: '**REQUIRED**: Result of this GetTransactionStatus call.'
        $ref: '#/definitions/GetTransactionStatusResult'
      transferFundsResult:
        description: Result of the FundsTransfer operation.
        $ref: '#/definitions/TransferFundsResponseTransferFundsResult'
      transactionDoesNotExist:
        description: The transaction was not found in the system. This can happen if the call from Google to partner got dropped and the partner never received the original transaction. Now when Google tries to lookup the status, partner should return this error code to indicate that the transaction doesn't exist in the system. Google should mark the transaction as failed in that case. It is different than a Http 404 where the url of GetTransactionStatus was not found in which case Google can't update the status of the transaction.
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2Empty'
      resultNotKnownYet:
        description: Captures the scenario where the integrator itself doesn't have a definite status, maybe because they have not received it from the underlying payment network.
        $ref: '#/definitions/TransactionResultNotKnownYet'
  GetTransactionStatusResult:
    description: Result codes for GetTransactionStatus. This indicates the status of the lookup operation and not the actual transaction. If the transaction look up failed due to some internal error, the partner should return a non 200 Http error code.
    type: object
    properties:
      success:
        description: Successful lookup.
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2Empty'
  GetDisburseTransactionStatusRequest:
    description: Request object for GetDisburseTransactionStatus.
    type: object
    properties:
      requestHeader:
        description: '**REQUIRED**: Common header for all requests.'
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2RequestHeader'
      disburseRequestId:
        description: '**REQUIRED**: The request_id of the original disburse transaction.'
        type: string
      paymentIntegratorAccountId:
        description: '**REQUIRED**: The payment integrator account identifier that identifies the caller and associated contractual constraints for this interaction.'
        type: string
  GetDisburseTransactionStatusResponse:
    description: Response object for GetDisburseTransactionStatus.
    type: object
    properties:
      responseHeader:
        description: '**REQUIRED**: Common header for all responses.'
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2ResponseHeader'
      result:
        description: '**REQUIRED**: Result of this GetTransactionStatus call.'
        $ref: '#/definitions/GetTransactionStatusResult'
      disburseResult:
        description: The result of the disburse transaction whose status is looked up.
        $ref: '#/definitions/GoogleStandardpaymentsTypesBankingFopV2DisburseResult'
      transactionDoesNotExist:
        description: The transaction was not found in the system. This can happen if the call from Google to partner got dropped and the partner never received the original transaction. Now when Google tries to lookup the status, partner should return this error code to indicate that the transaction doesn't exist in the system. Google should mark the transaction as failed in that case. It is different than a Http 404 where the url of GetTransactionStatus was not found in which case Google can't update the status of the transaction.
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2Empty'
      resultNotKnownYet:
        description: Captures the scenario where the integrator itself doesn't have a definite status, maybe because they have not received it from the underlying payment network.
        $ref: '#/definitions/TransactionResultNotKnownYet'
  GetPayeeProxyRegistrationStatusRequest:
    description: Request object for the GetPayeeProxyRegistrationStatus method.
    type: object
    properties:
      requestHeader:
        description: '**REQUIRED**: Common header for all requests.'
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2RequestHeader'
      proxyKey:
        description: '**REQUIRED**: The proxy key for which the registration status is being queried.'
        $ref: '#/definitions/PayeeProxyKey'
  GetPayeeProxyRegistrationStatusResponse:
    description: Response object for the GetPayeeProxyRegistrationStatus method
    type: object
    properties:
      responseHeader:
        description: '**REQUIRED**: Common header for all responses.'
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2ResponseHeader'
      registrationStatus:
        description: '**REQUIRED**: Registration status of the Proxy Key.'
        type: string
        enum:
          - PAYEE_PROXY_REGISTRATION_STATUS_UNSPECIFIED
          - REGISTERED
          - NOT_REGISTERED
  GetPayeeProxyDisplayInfoRequest:
    description: Request object for the GetPayeeProxyDisplayInfo method.
    type: object
    properties:
      requestHeader:
        description: '**REQUIRED**: Common header for all requests.'
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2RequestHeader'
      proxyKey:
        description: '**REQUIRED**: The proxy key for which the display information is being requested.'
        $ref: '#/definitions/PayeeProxyKey'
      associationId:
        description: '**OPTIONAL**: The id that represents the association between a customer''s Google account and a customer''s account with the vendor. Only present if the request is initiated by a user in-session.'
        type: string
  GetPayeeProxyDisplayInfoResponse:
    description: Response object for the GetPayeeProxyDisplayInfo method
    type: object
    properties:
      responseHeader:
        description: '**REQUIRED**: Common header for all responses.'
        $ref: '#/definitions/GoogleStandardpaymentsTypesV2ResponseHeader'
      displayInfoResult:
        description: '**REQUIRED**: Success/failure result of GetPayeeProxyDisplayInfoResponse.'
        $ref: '#/definitions/GetPayeeProxyDisplayInfoResponseGetPayeeProxyDisplayInfoResult'
  GetPayeeProxyDisplayInfoResponseGetPayeeProxyDisplayInfoResult:
    type: object
    properties:
      success:
        description: The display info was found for the PayeeProxyKey.
        $ref: '#/definitions/PayeeProxyDisplayInfoSuccess'
      failure:
        description: The display info lookup failed.
        $ref: '#/definitions/PayeeProxyDisplayInfoFailure'
  PayeeProxyDisplayInfoSuccess:
    description: Message that contains the details of a successful display information query.
    type: object
    properties:
      displayInfo:
        description: '**REQUIRED**: Display information for the Proxy Key.'
        $ref: '#/definitions/PayeeProxyDisplayInfo'
  PayeeProxyDisplayInfo:
    description: Data that is meant for display and has been registered for a given PayeeProxyKey.
    type: object
    properties:
      displayName:
        description: Name that has been registered for display with the PayeeProxy.
        type: string
  PayeeProxyDisplayInfoFailure:
    description: Message that contains the details of a failed display information query.
    type: object
    properties:
      failureReason:
        type: string
        enum:
          - PAYEE_PROXY_DISPLAY_INFO_FAILURE_REASON_UNSPECIFIED
          - PROXY_KEY_NOT_REGISTERED
